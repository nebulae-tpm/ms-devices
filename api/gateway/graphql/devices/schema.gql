"Device detail info"
type Device {  
  "Device id"
  id: ID  
  "Current device status"
  deviceStatus: DeviceStatus
  "Current app status"
  appStatus: AppStatus
  "Device network params"
  deviceNetwork: DeviceNetwork
  
}

"Current device status"
type DeviceStatus {  
  "Device serial"
  devSn: String  
  "Display serial"
  displaySn: String  
  "Connector Serial"
  connectorSn: String  
  "Device name"
  hostname: String
  "information of device memory"
  deviceDataList: [DeviceData]
  "Information of device voltage"
  voltage: Voltage
  "Device uptime"
  upTime: String  
  "Device temperature"
  temperature: Int
  "CPU status"
  cpuStatus: [Int]
  "Device iot connected"
  online: Boolean
  "Device Ram status"
  ram: DeviceData
  
}

"Current app status"
type AppStatus {
  "Civica tables version"
  appTablesVersion: AppTablesVersion
  "Current tables availables in device"
  appVersions: [AppVersionDescription]
  "App time stamp"
  timestamp: BigInt  
}

"Device network params"
type DeviceNetwork {
  "Modem serial"
  modemSn: String
  "Gatway"
  gateway: String 
  "Wifi serial"
  wifiSn: String
  "Mac address"
  mac: String
  "DNS address"
  dns: String
  "Curent SIM status"
  simStatus: Boolean
  "SIM IMEI"
  simImei: String  
  "Information of interfaces in a device"
  ipMaskMap: [Interface]
  "Modem band"
  band: String
  "Modem mode"
  mode: String 
}

"Information of interfaces in a device"
type Interface {
  "Interface name"
  name: String
  "Interface addresses"
  addresses: [String]
}

"Current tables availables in device"
type AppVersionDescription {
  "Table name"
  name: String
  "Table version"
  version: String
}

"Civica tables version"
type AppTablesVersion {
  "Table fare policy"
  farePolicy: String
  "Table black list"
  blackList: String
}

"information of RAM, FLASH and SD"
type DeviceData {
  "Memory total value"
  totalValue: Float
  "Memory current value"
  currentValue: Float
  "Memory unit information (Mib, Kib)"
  memoryUnitInformation: MemoryUnitInformation
  "Memory type"
  memorytype: MemoryType
}

"Memory type in Device"
enum MemoryType {
  "Device RAM memory"
  RAM
  "Device FLASH memory"
  FLASH
  "Device SD memory"
  SD
}

enum MemoryUnitInformation {
  "Kibibyte"
  KiB
  "Mebibite"
  MiB
  "Gibibyte"
  GiB
}

"Information of voltage state"
type Voltage {
  "Current device voltage value"
  currentValue: Float
  "Highest device voltage value"
  highestValue: Float
  "Lowest device voltage value"
  lowestValue: Float
}

type AvgInRangeOfTime {
  grouped_data: Float,
  interval: BigInt
}

type Query {
  "Get device detail filtered by the device id"
  getDeviceDetail(id: ID!): Device

  "Get all devices"
  getDevices(page: Int!, count: Int!): [Device]

  "Get the size of table Device"
  getDeviceTableSize: Int

  getRamAvgInRangeOfTime(initTime: BigInt, endTime: BigInt, deviceId: String): [AvgInRangeOfTime]
}

type Subscription {
  DeviceVolumesStateReportedEvent(id: ID): Device
  DeviceDisplayStateReportedEvent(id: ID): Device
  DeviceSystemStateReportedEvent(id: ID): Device
  DeviceDeviceStateReportedEvent(id: ID): Device
  DeviceLowestVoltageReportedEvent(id: ID): Device
  DeviceHighestVoltageReportedEvent(id: ID): Device
  DeviceNetworkStateReportedEvent(id: ID): Device
  DeviceModemStateReportedEvent(id: ID): Device
  DeviceMainAppStateReportedEvent(id: ID): Device
}
